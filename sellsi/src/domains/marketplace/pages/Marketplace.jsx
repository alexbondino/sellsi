// ‚ùå NO EDITAR L√ìGICA AQU√ç
// ‚úÖ SOLO EDITAR PARA:
// - Cambiar el layout general
// - Agregar/quitar secciones
// - Modificar estilos del contenedor principal

import React, { useState, useEffect } from 'react';
import { Box } from '@mui/material';

// Hook centralizado
import useMarketplaceLogic from './useMarketplaceLogic.jsx';

// Componentes de secciones
import SearchSection from './sections/SearchSection.jsx';
// import FilterSection from './sections/FilterSection.jsx'; // Bot√≥n de filtros comentado
import ProductsSection from './sections/ProductsSection.jsx';

// Componente Login
import { Login } from '../../auth';

// ‚úÖ MEJORA DE RENDIMIENTO: Memoizaci√≥n del componente principal
const Marketplace = React.memo(() => {
  // Estado para controlar el modal de login
  const [openLogin, setOpenLogin] = useState(false); // Listener para el evento 'openLogin' disparado desde ProductCard
  useEffect(() => {
    const handleOpenLogin = () => {
      setOpenLogin(true);
    };

    window.addEventListener('openLogin', handleOpenLogin);

    return () => {
      window.removeEventListener('openLogin', handleOpenLogin);
    };
  }, []);

  // ===== USAR CUSTOM HOOK PARA TODA LA L√ìGICA =====
  // ‚úÖ MEJORA DE RENDIMIENTO: Memoizaci√≥n de configuraci√≥n est√°tica
  const marketplaceConfig = React.useMemo(
    () => ({
      hasSideBar: false, // Indicar que NO hay SideBar
      // ‚úÖ Valores espec√≠ficos para Marketplace (mover m√°s a la izquierda)
      searchBarMarginLeft: {
        xs: 0,
        sm: 0,
        md: -5,
        lg: 3,
        xl: 3,
      },
      categoryMarginLeft: {
        xs: 0,
        sm: 0,
        md: -5,
        lg: 2,
        xl: 2,
      },
      // ‚úÖ Nuevo: Margen del t√≠tulo "üõçÔ∏è Todos los Productos"
      titleMarginLeft: {
        xs: 0,
        sm: 0,
        md: 0,
        lg: 2,
        xl: 3,
      },
    }),
    []
  );

  const { searchSectionProps, filterSectionProps, productsSectionProps } =
    useMarketplaceLogic(marketplaceConfig);

  // ‚úÖ MEJORA DE RENDIMIENTO: Memoizaci√≥n de configuraci√≥n est√°tica
  // Configuraci√≥n de botones de navegaci√≥n (sin botones para Marketplace)
  const navigationButtons = React.useMemo(() => [], []);

  // Configuraci√≥n de botones de autenticaci√≥n (usa defaults)
  const authButtons = React.useMemo(() => ({}), []);

  // ‚úÖ MEJORA DE RENDIMIENTO: Memoizaci√≥n de handler de navegaci√≥n
  const handleNavigate = React.useCallback(ref => {
    // Eliminado log de desarrollo
    // TODO: Implementar navegaci√≥n si es necesario
  }, []);

  // ‚úÖ MEJORA DE RENDIMIENTO: Memoizaci√≥n de estilos del contenedor principal
  const containerStyles = React.useMemo(
    () => ({
      bgcolor: '#f8fafc',
      minHeight: '100vh',
      pt: { xs: 7, md: 8 },
    }),
    []
  );
  return (
    <Box>
      {/* TopBar eliminada, ahora la maneja App.jsx globalmente */}
      {/* Contenido principal con margen para compensar TopBar fijo (SIN SideBar) */}
      <Box sx={containerStyles}>
        {/* Secci√≥n de b√∫squeda y navegaci√≥n */}
        <SearchSection {...searchSectionProps} />

        {/* Secci√≥n de filtros */}
        {/* <FilterSection {...filterSectionProps} /> */} {/* Bot√≥n de filtros comentado */}

        {/* Secci√≥n de productos */}
        <ProductsSection {...productsSectionProps} />
      </Box>{' '}
      {/* Modal de Login */}
      <Login open={openLogin} onClose={() => setOpenLogin(false)} />
    </Box>
  );
});

// ‚úÖ MEJORA DE RENDIMIENTO: DisplayName para debugging
Marketplace.displayName = 'Marketplace';

export default Marketplace;
